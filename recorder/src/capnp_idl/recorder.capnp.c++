// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: recorder.capnp

#include "recorder.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<70> b_e4a77ea73683687d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    125, 104, 131,  54, 167, 126, 167, 228,
     15,   0,   0,   0,   1,   0,   2,   0,
     32,  43, 203,  37,  14, 234, 199, 184,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 111, 114, 100, 101, 114,
     46,  99,  97, 112, 110, 112,  58,  83,
    116,  97,  99, 107,  83,  97, 109, 112,
    108, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 114, 116,  79, 102, 102,
    115, 101, 116,  77, 105,  99, 114, 111,
    115,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 104, 114, 101,  97, 100,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114,  97, 109, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     86, 235,  16, 226,  36, 185, 216, 203,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e4a77ea73683687d = b_e4a77ea73683687d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e4a77ea73683687d[] = {
  &s_cbd8b924e210eb56,
};
static const uint16_t m_e4a77ea73683687d[] = {2, 0, 1};
static const uint16_t i_e4a77ea73683687d[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e4a77ea73683687d = {
  0xe4a77ea73683687d, b_e4a77ea73683687d.words, 70, d_e4a77ea73683687d, m_e4a77ea73683687d,
  1, 3, i_e4a77ea73683687d, nullptr, nullptr, { &s_e4a77ea73683687d, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<63> b_cbd8b924e210eb56 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     86, 235,  16, 226,  36, 185, 216, 203,
     15,   0,   0,   0,   1,   0,   2,   0,
     32,  43, 203,  37,  14, 234, 199, 184,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 111, 114, 100, 101, 114,
     46,  99,  97, 112, 110, 112,  58,  70,
    114,  97, 109, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    109, 101, 116, 104, 111, 100,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  99, 105,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105, 110, 101,  78, 111,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cbd8b924e210eb56 = b_cbd8b924e210eb56.words;
#if !CAPNP_LITE
static const uint16_t m_cbd8b924e210eb56[] = {1, 2, 0};
static const uint16_t i_cbd8b924e210eb56[] = {0, 1, 2};
const ::capnp::_::RawSchema s_cbd8b924e210eb56 = {
  0xcbd8b924e210eb56, b_cbd8b924e210eb56.words, 63, nullptr, m_cbd8b924e210eb56,
  0, 3, i_cbd8b924e210eb56, nullptr, nullptr, { &s_cbd8b924e210eb56, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// StackSample
#ifndef _MSC_VER
constexpr uint16_t StackSample::_capnpPrivate::dataWordSize;
constexpr uint16_t StackSample::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind StackSample::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* StackSample::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* StackSample::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Frame
#ifndef _MSC_VER
constexpr uint16_t Frame::_capnpPrivate::dataWordSize;
constexpr uint16_t Frame::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Frame::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Frame::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Frame::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



